{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CartContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useReducer, ReactNode } from 'react';\n\n// Types\nexport interface Product {\n  id: string;\n  name: string;\n  price: number;\n  description: string;\n  imageUrl: string;\n}\n\nexport interface CartItem extends Product {\n  quantity: number;\n}\n\ninterface CartState {\n  items: CartItem[];\n  total: number;\n}\n\ntype CartAction =\n  | { type: 'ADD_ITEM'; payload: Product }\n  | { type: 'REMOVE_ITEM'; payload: string }\n  | { type: 'UPDATE_QUANTITY'; payload: { id: string; quantity: number } }\n  | { type: 'CLEAR_CART' };\n\ninterface CartContextType {\n  state: CartState;\n  addItem: (product: Product) => void;\n  removeItem: (productId: string) => void;\n  updateQuantity: (productId: string, quantity: number) => void;\n  clearCart: () => void;\n  getItemCount: () => number;\n}\n\n// Cart reducer\nconst cartReducer = (state: CartState, action: CartAction): CartState => {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      const existingItem = state.items.find(item => item.id === action.payload.id);\n      \n      if (existingItem) {\n        const updatedItems = state.items.map(item =>\n          item.id === action.payload.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n        return {\n          items: updatedItems,\n          total: calculateTotal(updatedItems)\n        };\n      } else {\n        const newItems = [...state.items, { ...action.payload, quantity: 1 }];\n        return {\n          items: newItems,\n          total: calculateTotal(newItems)\n        };\n      }\n    }\n    \n    case 'REMOVE_ITEM': {\n      const filteredItems = state.items.filter(item => item.id !== action.payload);\n      return {\n        items: filteredItems,\n        total: calculateTotal(filteredItems)\n      };\n    }\n    \n    case 'UPDATE_QUANTITY': {\n      if (action.payload.quantity <= 0) {\n        const filteredItems = state.items.filter(item => item.id !== action.payload.id);\n        return {\n          items: filteredItems,\n          total: calculateTotal(filteredItems)\n        };\n      }\n      \n      const updatedItems = state.items.map(item =>\n        item.id === action.payload.id\n          ? { ...item, quantity: action.payload.quantity }\n          : item\n      );\n      return {\n        items: updatedItems,\n        total: calculateTotal(updatedItems)\n      };\n    }\n    \n    case 'CLEAR_CART':\n      return {\n        items: [],\n        total: 0\n      };\n    \n    default:\n      return state;\n  }\n};\n\n// Helper function to calculate total\nconst calculateTotal = (items: CartItem[]): number => {\n  return items.reduce((total, item) => total + (item.price * item.quantity), 0);\n};\n\n// Create context\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\n// Cart provider component\nexport const CartProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, { items: [], total: 0 });\n\n  const addItem = (product: Product) => {\n    dispatch({ type: 'ADD_ITEM', payload: product });\n  };\n\n  const removeItem = (productId: string) => {\n    dispatch({ type: 'REMOVE_ITEM', payload: productId });\n  };\n\n  const updateQuantity = (productId: string, quantity: number) => {\n    dispatch({ type: 'UPDATE_QUANTITY', payload: { id: productId, quantity } });\n  };\n\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n  };\n\n  const getItemCount = () => {\n    return state.items.reduce((count, item) => count + item.quantity, 0);\n  };\n\n  const value: CartContextType = {\n    state,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    getItemCount\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Custom hook to use cart context\nexport const useCart = (): CartContextType => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}